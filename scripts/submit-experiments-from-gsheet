#!/usr/bin/env python

import argparse
import sys
import os
from contextlib import contextmanager

import luigi

from rnaseq_pipeline.tasks import SubmitExperimentsFromGoogleSpreadsheetToGemma

@contextmanager
def umask(umask):
    print(f'Setting umask to 0x{umask:03o}')
    prev_umask = os.umask(umask)
    try:
        yield None
    finally:
        print(f'Restoring umask to 0x{prev_umask:03o}')
        os.umask(prev_umask)

def parse_octal(s):
    return int(s, 8)

def main(argv):
    parser = argparse.ArgumentParser()
    parser.add_argument('--spreadsheet-id', required=True, help='Spreadsheet ID')
    parser.add_argument('--sheet-name', required=True, help='Sheet name')
    parser.add_argument('--umask', type=parse_octal, default='002', help='Set a umask (defaults to 002 to make created files group-writable)')
    parser.add_argument('--workers', type=int, default=100, help='Number of workers to use (defaults to 100)')
    parser.add_argument('--ignore-priority', action='store_true', help='Ignore the priority column in the spreadsheet')
    parser.add_argument('--local-scheduler', action='store_true', default=False)
    args = parser.parse_args(argv)
    with umask(args.umask):
        results = luigi.build([SubmitExperimentsFromGoogleSpreadsheetToGemma(args.spreadsheet_id, args.sheet_name, ignore_priority=args.ignore_priority)], workers=args.workers, detailed_summary=True, local_scheduler=args.local_scheduler)
    print(results.summary_text)

if __name__ == '__main__':
    sys.exit(main(sys.argv[1:]))
